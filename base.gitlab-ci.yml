image: registry.git.captive.fr/captive/systeme/docker-maker:20.10.16-1

include:
  - remote: 'https://raw.githubusercontent.com/Captive-Studio/gitlab-ci/main/Auto-Devops.gitlab-ci.yml'

before_script:
  - git checkout -B "$CI_BUILD_REF_NAME"

prepare:check-changelog:
  stage: prepare
  script:
    - make changelog-check
  allow_failure: true
  except:
    - tags
    - master
    - main

# prepare:lint:eslint:
#   extends:
#   - .code_quality
#   script:
#     - controle-qualite.mk eslint
#   allow_failure: true
#
# prepare:lint:prettier:
#   extends:
#   - .code_quality
#   script:
#     - controle-qualite.mk prettier
#   allow_failure: true
#
# prepare:lint:stylelint:
#   extends:
#   - .code_quality
#   script:
#     - controle-qualite.mk stylelint
#   allow_failure: true

build:
  extends:
    - .docker_dind
  stage: build
  script:
    - make ci-build ci-push
  except:
    - /^backup\//
  tags:
    - docker-dind
    - heavy-job

test:most:
  extends:
    - .docker_dind
  stage: test
  script:
    - make -e stage=test generate-env
    - make test-most
  except:
    - /^backup\//
  tags:
    - docker-dind
    - heavy-job

test:system:
  extends:
    - .docker_dind
  stage: test
  script:
    - make -e stage=test generate-env
    - make test-system
  except:
    - /^backup\//
  tags:
    - docker-dind
    - heavy-job
  allow_failure: true
  when: manual

release:image:
  extends:
    - .docker_dind
  stage: release
  script:
    - make ci-push-release
    - make -e REF_ID=latest ci-push-release
  only:
    - tags
    - master
    - main

review:staging:
  variables:
    DEPLOY_STAGE: staging
  stage: review
  when: manual

review:review:
  variables:
    DEPLOY_STAGE: review
  stage: review
  when: manual

deploy:staging:
  variables:
    DEPLOY_STAGE: staging
  stage: deploy
  only:
    - master
    - main

deploy:production:
  variables:
    DEPLOY_STAGE: production
  stage: deploy
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v([0-9]|[1-9][0-9]+)\.([0-9]|[1-9][0-9]+)\.([0-9]|[1-9][0-9]+)$/'
