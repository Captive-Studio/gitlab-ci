image: registry.git.captive.fr/captive/systeme/docker-maker:20.10.16-1

stages:
  - pre-test
  - build
  - review
  - test
  - release
  - deploy

.docker_dind: &docker_dind
  services:
    - name: docker:20.10.16-dind-alpine3.15
      command:
        [--registry-mirror, 'https://docker.mirror.captive.fr', --tls=false]
  tags:
    - docker-dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CONTAINER_REGISTRY
    - export TEST_IMAGE=$REGISTRY_PROJECT_URL/$BUILD_SUBPATH:${BUILD_ID}-test

.pre_test: &pre_test
  image: registry.git.captive.fr/captive/systeme/docker/controle-qualite:latest
  stage: pre-test
  tags:
    - lightweight-job
  except:
    - /^backup\//

# Common jobs variables
variables:
  CONTAINER_REGISTRY: registry.git.captive.fr
  # Required variables for docker.mk
  REGISTRY_PROJECT_URL: $CONTAINER_REGISTRY/$CI_PROJECT_PATH
  BUILD_SUBPATH: dev
  BUILD_ID: $CI_COMMIT_SHORT_SHA
  REF_ID: $CI_COMMIT_REF_SLUG
  # docker-dind
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ''
  APP_IMAGE: ''
  DEPLOY_SSH_KNOWN_HOSTS_BASE64: ''

before_script:
  - git checkout -B "$CI_BUILD_REF_NAME"

pre-test:check-changelog:
  stage: pre-test
  script:
    - make changelog-check
  allow_failure: true
  except:
    - tags
    - master
    - main

pre-test:check-tools:
  <<: *pre_test
  script:
    - controle-qualite.mk self-check-ruby
  allow_failure: true

pre-test:lint:rubocop:
  <<: *pre_test
  script:
    - controle-qualite.mk rubocop

pre-test:audit:bundle-audit:
  <<: *pre_test
  script:
    - controle-qualite.mk bundle-audit
  allow_failure: true

pre-test:audit:brakeman:
  <<: *pre_test
  script:
    - controle-qualite.mk brakeman
  allow_failure: true

# pre-test:lint:eslint:
#   <<: *pre_test
#   script:
#     - controle-qualite.mk eslint
#   allow_failure: true
#
# pre-test:lint:prettier:
#   <<: *pre_test
#   script:
#     - controle-qualite.mk prettier
#   allow_failure: true
#
# pre-test:lint:stylelint:
#   <<: *pre_test
#   script:
#     - controle-qualite.mk stylelint
#   allow_failure: true

build:
  <<: *docker_dind
  stage: build
  script:
    - make ci-build ci-push
  except:
    - /^backup\//
  tags:
    - docker-dind
    - heavy-job

test:most:
  <<: *docker_dind
  stage: test
  script:
    - make -e stage=test generate-env
    - make test-most
  except:
    - /^backup\//
  tags:
    - docker-dind
    - heavy-job

test:system:
  <<: *docker_dind
  stage: test
  script:
    - make -e stage=test generate-env
    - make test-system
  except:
    - /^backup\//
  tags:
    - docker-dind
    - heavy-job
  allow_failure: true
  when: manual

release:image:
  <<: *docker_dind
  stage: release
  script:
    - make ci-push-release
    - make -e REF_ID=latest ci-push-release
  only:
    - tags
    - master
    - main

review:
  variables:
    DEPLOY_STAGE: staging
  stage: review
  when: manual

deploy:staging:
  variables:
    DEPLOY_STAGE: staging
  stage: deploy
  only:
    - master
    - main

deploy:production:
  variables:
    DEPLOY_STAGE: production
  stage: deploy
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v([0-9]|[1-9][0-9]+)\.([0-9]|[1-9][0-9]+)\.([0-9]|[1-9][0-9]+)$/'
