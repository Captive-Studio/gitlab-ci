# @see https://gitlab.com/gitlab-org/gitlab-foss/-/blob/master/lib/gitlab/ci/templates/Ruby.gitlab-ci.yml

.ruby_rules:
  rules:
    - &skip_if_makefile
      exists:
        - Makefile
      when: never
    - &only_rubocop_conf
      exists:
        - .rubocop.yml
    - &only_rakefile
      exists:
        - Rakefile
    - &only_gemfile
      exists:
        - Gemfile

.ruby_image:
  image: ruby:3.0.5

.ruby_cache:
  cache:
    - &ruby_cache
      key:
        files:
          - Gemfile.lock
      paths:
        - ${BUNDLE_PATH}
      policy: pull

variables:
  BUNDLE_PATH: vendor/bundle
  BUNDLE_JOBS: $(nproc)
  BUNDLE_FROZEN: 'true'
  DISABLE_SPRING: 'true'

# FIXME: .code_quality "except" conflicts with "rules"
# except:
#   - /^backup\//

ruby:check-tools:
  extends:
    - .code_quality
  script:
    - controle-qualite.mk self-check-ruby
  rules:
    - <<: *only_gemfile
  allow_failure: true

ruby:rubocop:
  extends:
    - .code_quality
  script:
    - controle-qualite.mk rubocop
  rules:
    - <<: *only_rubocop_conf

ruby:bundle-audit:
  extends:
    - .code_quality
  script:
    - controle-qualite.mk bundle-audit
  rules:
    - <<: *only_gemfile
  allow_failure: true

ruby:brakeman:
  extends:
    - .code_quality
  script:
    - controle-qualite.mk brakeman
  rules:
    - <<: *only_gemfile
  allow_failure: true

ruby:install:
  extends:
    - .ruby_image
  stage: prepare
  cache:
    - <<: *ruby_cache
      policy: pull-push
  script:
    - ruby --version # Print out ruby version for debugging
    - bundle install "${FLAGS[@]}"
  rules:
    - <<: *skip_if_makefile
    - <<: *only_rubocop_conf

ruby:bundle-rubocop:
  extends:
    - .ruby_image
    - .ruby_cache
  stage: test
  script:
    - bundle exec rubocop
  needs:
    - job: ruby:install
      artifacts: true
  rules:
    - <<: *skip_if_makefile
    - <<: *only_rubocop_conf

.rails_test:
  extends:
    - .ruby_image
    - .ruby_cache
  stage: test
  services:
    - postgres:latest
    - redis:latest
  variables:
    RAILS_ENV: test
  before_script:
    - bin/rails db:create db:migrate
    - bin/rails db:seed
  needs:
    - job: ruby:install
      artifacts: true
  rules:
    - <<: *skip_if_makefile
    - <<: *only_rakefile

ruby:rails:test:
  extends:
    - .rails_test
  script:
    - bundle exec rake test
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage/coverage.xml

ruby:rails:test-system:
  extends:
    - .rails_test
  script:
    - bundle exec rake test:system
