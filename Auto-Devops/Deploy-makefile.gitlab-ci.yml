
.makefile_pass: &pass # ssh
  - eval $(ssh-agent -s)
  - mkdir -p $HOME/.ssh

  # pass
  - echo "$PASS_SSH_PRIVATE_KEY_GZ64" | base64 -d | gunzip | ssh-add -
  - (ssh -o StrictHostKeyChecking=no git@git.captive.fr true 2> /dev/null || true)
  - git clone "$PASS_REPOSITORY" ~/.password-store
  # - export PASSWORD_STORE_DIR=$(pwd)/pass-system

  # gpg
  - eval $(gpg-agent --daemon --default-cache-ttl 600 --max-cache-ttl 600)
  - export GPG_AGENT_INFO
  - echo "$GPG_KEYS_GZ64" | base64 -d | gunzip > keys.asc
  - echo "$GPG_PRIVATE_KEY_PASSPHRASE" | gpg --pinentry-mode loopback --passphrase-fd 0 --import keys.asc
  - echo "$GPG_PRIVATE_KEY_PASSPHRASE" | gpg --pinentry-mode loopback --passphrase-fd 0 --decrypt ~/.password-store/test.gpg > /dev/null
  - pass show test

  # deploy
  - echo "$DEPLOY_SSH_KNOWN_HOSTS_BASE64" | base64 -d >> $HOME/.ssh/known_hosts
  - cat $HOME/.ssh/known_hosts
  - echo "$DEPLOY_SSH_PRIVATE_KEY_GZ64" | base64 -d | gunzip | ssh-add -

.deploy_makefile:
  extends:
    - .docker_dind
  script:
    - set -eu; echo "DEPLOY_STAGE = $DEPLOY_STAGE"
    - export APP_IMAGE=$REGISTRY_PROJECT_URL/$BUILD_SUBPATH:$BUILD_ID
    - echo $APP_IMAGE
    - *pass
    - make -e stage=$DEPLOY_STAGE generate-env
    - make -e stage=$DEPLOY_STAGE ssh-check-fingerprint
    - make -e stage=$DEPLOY_STAGE traefik-deploy

makefile:review:
  extends:
    - .auto-devops_review
    - .deploy_makefile
  stage: review
  when: manual
  variables:
    IF_AUTO_DEVOPS_PLATFORM_TARGET: 'MAKEFILE'
    DEPLOY_STAGE: staging

makefile:staging:
  extends:
  - .auto-devops_staging
  - .deploy_makefile
  variables:
    IF_AUTO_DEVOPS_PLATFORM_TARGET: 'MAKEFILE'
    DEPLOY_STAGE: staging

makefile:production:
  extends:
  - .auto-devops_production_auto
  - .deploy_makefile
  variables:
    IF_AUTO_DEVOPS_PLATFORM_TARGET: 'MAKEFILE'
    DEPLOY_STAGE: production

makefile:production_manual:
  extends:
  - .auto-devops_production_manual
  - .deploy_makefile
  variables:
    IF_AUTO_DEVOPS_PLATFORM_TARGET: 'MAKEFILE'
    DEPLOY_STAGE: production
