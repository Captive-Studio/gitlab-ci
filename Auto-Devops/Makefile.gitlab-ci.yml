
.makefile_present_rule: &makefile_present_rule
  exists:
    - Makefile

# Docker make image mixin.
#
# @example
# my_step:
#   extends
#     - .docker_make_image
#   stage: ...
#
.docker_maker_image:
  image: registry.git.captive.fr/captive/systeme/docker-maker:20.10.16-1

makefile:prepare:check-changelog:
  extends:
    - .docker_maker_image
  stage: prepare
  script:
    - make changelog-check
  allow_failure: true
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      when: never
    - if: '$CI_COMMIT_TAG'
      when: never
    - <<: *makefile_present_rule

# prepare:lint:eslint:
#   extends:
#   - .code_quality
#   script:
#     - controle-qualite.mk eslint
#   allow_failure: true
#
# prepare:lint:prettier:
#   extends:
#   - .code_quality
#   script:
#     - controle-qualite.mk prettier
#   allow_failure: true
#
# prepare:lint:stylelint:
#   extends:
#   - .code_quality
#   script:
#     - controle-qualite.mk stylelint
#   allow_failure: true

makefile:build:
  extends:
    - .docker_maker_image
    - .docker_dind
  stage: build
  script:
    - make ci-build ci-push
  rules:
    - <<: *makefile_present_rule
  # FIXME: except:
  #   - /^backup\//
  tags:
    - docker-dind
    - heavy-job

makefile:test:most:
  extends:
    - .docker_maker_image
    - .docker_dind
  stage: test
  script:
    - make -e stage=test generate-env
    - make test-most
  # FIXME: except:
  #   - /^backup\//
  tags:
    - docker-dind
    - heavy-job
  rules:
    - <<: *makefile_present_rule

makefile:test:system:
  extends:
    - .docker_maker_image
    - .docker_dind
  stage: test
  script:
    - make -e stage=test generate-env
    - make test-system
  # FIXME: except:
  #   - /^backup\//
  rules:
    - <<: *makefile_present_rule
      when: manual
  tags:
    - docker-dind
    - heavy-job
  allow_failure: true

makefile:release:image:
  extends:
    - .docker_maker_image
    - .docker_dind
  stage: release
  script:
    - make ci-push-release
    - make -e REF_ID=latest ci-push-release
  rules:
    - if: '$CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH'
      when: never
    - <<: *makefile_present_rule
