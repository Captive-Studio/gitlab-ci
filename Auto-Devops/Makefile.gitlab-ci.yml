# Makefile deployment based
#
# Used to have complete control over task steps
#
# Guidelines
#
# ✓ If Makefile is present, every other jobs should be disabled (NodeJS, Ruby, etc)
# ✓ Makefile script should be compatible with https://docs.gitlab.com/ee/ci/variables/predefined_variables.html
# ✓ Simple 1:1 correspondence between gitlab job <> Makefile target
# ✓ Convention :
#     gitlab job: 'makefile:${job_name}'
#     makefile target : 'make ci-${job_name}'

.makefile_rules:
  rules:
    - &skip_build_disabled
      if: $BUILD_ENABLED == null || $BUILD_ENABLED == '' || $BUILD_ENABLED == 'false'
      when: never
    - &skip_code_quality_disabled
      if: $CODE_QUALITY_ENABLED == null || $CODE_QUALITY_ENABLED == '' || $CODE_QUALITY_ENABLED == 'false'
      when: never
    - &skip_test_disabled
      if: $TEST_ENABLED == null || $TEST_ENABLED == '' || $TEST_ENABLED == 'false'
      when: never
    - &skip_test_system_disabled
      if: $TEST_SYSTEM_ENABLED == null || $TEST_SYSTEM_ENABLED == '' || $TEST_SYSTEM_ENABLED == 'false'
      when: never
    - &skip_default_branch
      if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: never
    - &skip_non_default_branch
      if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      when: never
    - &only_makefile
      exists:
        - Makefile

# TODO: use $CI_COMMIT_REF_NAME in makefile
.makefile_checkout:
  extends:
    - .git_checkout
  variables:
    GIT_STRATEGY: fetch
    GIT_CHECKOUT_REF_NAME: 'true'

makefile:check-changelog:
  extends:
    - .makefile_checkout
    - .docker_maker_image
  stage: prepare
  script:
    - make ci-check-changelog
  allow_failure: true
  rules:
    - <<: *skip_code_quality_disabled
    - <<: *skip_default_branch
    - if: $CI_COMMIT_TAG
      when: never
    - <<: *only_makefile

makefile:lint:
  extends:
    - .makefile_checkout
    - .docker_maker_image
    - .docker_dind
  stage: test
  script:
    - | # make ci-lint (only if present)
      # Present
      if make -n ci-lint 2>/dev/null; then
        make ci-lint
      # Not present
      else
        echo 'Warning: `make ci-lint` not found'
      fi;
  rules:
    - <<: *skip_code_quality_disabled
    - <<: *only_makefile
  tags:
    - docker-dind
    - heavy-job

makefile:build:
  extends:
    - .makefile_checkout
    - .docker_maker_image
    - .docker_dind
  stage: build
  script:
    - make ci-build
  rules:
    - <<: *skip_build_disabled
    - <<: *only_makefile
  # FIXME: except:
  #   - /^backup\//
  tags:
    - docker-dind
    - heavy-job

makefile:test:
  extends:
    - .makefile_checkout
    - .docker_maker_image
    - .docker_dind
  stage: test
  script:
    - make ci-test
  # FIXME: except:
  #   - /^backup\//
  tags:
    - docker-dind
    - heavy-job
  rules:
    - <<: *skip_test_disabled
    - <<: *only_makefile

makefile:test-system:
  extends:
    - .makefile_checkout
    - .docker_maker_image
    - .docker_dind
  stage: test
  script:
    - make ci-test-system
  # FIXME: except:
  #   - /^backup\//
  rules:
    - <<: *skip_test_system_disabled
    - <<: *only_makefile
  tags:
    - docker-dind
    - heavy-job

makefile:release-images:
  extends:
    - .makefile_checkout
    - .docker_maker_image
    - .docker_dind
  stage: release
  script:
    - make ci-release-images
  rules:
    - <<: *skip_non_default_branch
    - <<: *only_makefile
