.nodejs_rules:
  rules:
    - &skip_build_disabled
      if: $BUILD_ENABLED == null || $BUILD_ENABLED == '' || $BUILD_ENABLED == 'false'
      when: never
    - &skip_code_quality_disabled
      if: $CODE_QUALITY_ENABLED == null || $CODE_QUALITY_ENABLED == '' || $CODE_QUALITY_ENABLED == 'false'
      when: never
    - &skip_test_disabled
      if: $TEST_ENABLED == null || $TEST_ENABLED == '' || $TEST_ENABLED == ''
      when: never
    - &skip_test_system_disabled
      if: $TEST_SYSTEM_ENABLED == null || $TEST_SYSTEM_ENABLED == '' || $TEST_SYSTEM_ENABLED == 'false'
      when: never
    - &skip_if_makefile
      exists:
        - Makefile
      when: never
    - &skip_if_nodejs_disabled
      if: $NODEJS_ENABLED == null || $NODEJS_ENABLED == '' || $NODEJS_ENABLED == 'false'
      when: never
    - &nodejs_present_rule
      exists:
        - package.json

.nodejs_cache:
  cache:
    - &nodejs_cache
      key: ${CI_PIPELINE_ID}-node-install
      paths:
        - ${CI_CYPRESS_CACHE_FOLDER}
        - '**/node_modules/'
      policy: pull

variables:
  # Display less npm message
  npm_config_loglevel: warn
  # NPM cache environment variable
  npm_config_cache: $CI_PROJECT_DIR/$CI_NPM_CACHE_FOLDER
  # Cypress cache environment variable
  CYPRESS_CACHE_FOLDER: $CI_PROJECT_DIR/$CI_CYPRESS_CACHE_FOLDER
  # Cypress cache environment variable
  YARN_CACHE_FOLDER: $CI_PROJECT_DIR/$CI_YARN_CACHE_FOLDER

nodejs:install:
  extends:
    - .nodejs_image
  stage: prepare
  cache:
    - key: ${CI_COMMIT_REF_SLUG}-package-cache
      # must be inside $CI_PROJECT_DIR for gitlab-runner caching (#3)
      paths:
        - ${CI_NPM_CACHE_FOLDER}
        - ${CI_YARN_CACHE_FOLDER}
      when: on_success
      policy: pull-push
    - <<: *nodejs_cache
      policy: push
  script:
    - |
      # Case Yarn Berry
      if [[ -f yarn.lock && -d .yarn/releases ]]; then
        yarn install --immutable;

      # Case Yarn Classic
      elif [[ -f yarn.lock && ! -d .yarn/releases ]]; then
        yarn install --frozen-file --prefer-offline;

      # Case NPM
      else
        npm ci --prefer-offline --no-audit --no-optional;
      fi;
  rules:
    - <<: *skip_if_makefile
    - <<: *skip_if_nodejs_disabled
    - <<: *nodejs_present_rule

nodejs:build:
  extends:
    - .nodejs_image
    - .nodejs_cache
  stage: build
  script:
    - npm run build --if-present
  artifacts:
    paths:
      - dist/
      - lib/
      - packages/*/lib/
      - packages/*/dist/
  needs:
    - job: nodejs:install
      artifacts: true
  rules:
    - <<: *skip_build_disabled
    - <<: *skip_if_makefile
    - <<: *skip_if_nodejs_disabled
    - <<: *nodejs_present_rule

nodejs:lint:
  extends:
    - .nodejs_image
    - .nodejs_cache
  stage: test
  tags:
    - lightweight-job
  script:
    - npm run lint --if-present
  needs:
    - job: nodejs:install
      artifacts: true
  rules:
    - <<: *skip_code_quality_disabled
    - <<: *skip_if_makefile
    - <<: *skip_if_nodejs_disabled
    - <<: *nodejs_present_rule

nodejs:test:
  extends:
    - .nodejs_image
    - .nodejs_cache
  stage: test
  artifacts:
    when: always
    reports:
      junit:
        - '**/junit.xml'
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura-coverage.xml
  tags:
    - lightweight-job
  script:
    - npm test --if-present
  needs:
    - job: nodejs:build
      artifacts: true
  rules:
    - <<: *skip_test_disabled
    - <<: *skip_if_makefile
    - <<: *skip_if_nodejs_disabled
    - <<: *nodejs_present_rule

nodejs:test:e2e:
  extends:
    - .nodejs_image_browsers
    - .nodejs_cache
  stage: test
  tags:
    - heavy-job
  script:
    - npm run test:e2e --if-present
  needs:
    - job: nodejs:build
      artifacts: true
  rules:
    - <<: *skip_test_system_disabled
    - <<: *skip_if_makefile
    - <<: *skip_if_nodejs_disabled
    - <<: *nodejs_present_rule
