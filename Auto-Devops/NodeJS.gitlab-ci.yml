.auto-devops:rules:skip_if_nodejs_disabled:
  rules:
    - if: $NODEJS_ENABLED == null || $NODEJS_ENABLED == '' || $NODEJS_ENABLED == 'false'
      when: never

.auto-devops:rules:nodejs_present_rule:
  rules:
    - exists:
        - package.json

variables:
  # Display less npm message
  npm_config_loglevel: warn
  # NPM cache environment variable
  npm_config_cache: $CI_PROJECT_DIR/$CI_NPM_CACHE_PATH
  # Cypress cache environment variable
  CYPRESS_CACHE_FOLDER: $CI_PROJECT_DIR/$CI_CYPRESS_CACHE_PATH
  # Cypress cache environment variable
  YARN_CACHE_FOLDER: $CI_PROJECT_DIR/$CI_YARN_CACHE_PATH

.nodejs_base:
  extends:
    - .autodevops_retry
    - .nodejs_image

nodejs:install:
  extends:
    - .nodejs_base
  stage: prepare
  cache:
    - !reference [.nodejs_download_cache, cache]
    - !reference [.nodejs_cache_push, cache]
  script:
    - |
      # Check lock files
      if [[ -f yarn.lock && -f package-lock.json ]]; then
        >&2 echo -e "\e[31m‚ùå Error: Duplicate lockfile. Either 'package-lock.json' or 'yarn.lock' should be removed."
        exit 1
      fi
    - |
      # Case Yarn Berry
      if [[ -f yarn.lock && -d .yarn/releases ]]; then
        yarn install --immutable;

      # Case Yarn Classic
      elif [[ -f yarn.lock && ! -d .yarn/releases ]]; then
        yarn install --frozen-file --prefer-offline;

      # Case NPM
      else
        npm ci --prefer-offline --no-audit --no-optional;
      fi;
  rules:
    - !reference [.auto-devops:rules:skip_if_makefile, rules]
    - !reference [.auto-devops:rules:skip_if_nodejs_disabled, rules]
    - !reference [.auto-devops:rules:nodejs_present_rule, rules]

nodejs:build:
  extends:
    - .nodejs_base
    - .install_cache
  stage: build
  script:
    - npm run build --if-present
  artifacts:
    paths:
      - dist/
      - lib/
      - packages/*/lib/
      - packages/*/dist/
  needs:
    - job: nodejs:install
      artifacts: true
  rules:
    - !reference [.auto-devops:rules:skip_build_disabled, rules]
    - !reference [.auto-devops:rules:skip_if_makefile, rules]
    - !reference [.auto-devops:rules:skip_if_nodejs_disabled, rules]
    - !reference [.auto-devops:rules:nodejs_present_rule, rules]

nodejs:lint:
  extends:
    - .nodejs_base
    - .install_cache
  stage: validate
  tags:
    - lightweight-job
  script:
    - npm run lint --if-present
  needs:
    - job: nodejs:install
      artifacts: true
  rules:
    - !reference [.auto-devops:rules:skip_code_quality_disabled, rules]
    - !reference [.auto-devops:rules:skip_if_makefile, rules]
    - !reference [.auto-devops:rules:skip_if_nodejs_disabled, rules]
    - !reference [.auto-devops:rules:nodejs_present_rule, rules]

nodejs:test:
  extends:
    - .nodejs_base
    - .install_cache
  stage: test
  artifacts:
    when: always
    reports:
      junit:
        - '**/junit.xml'
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura-coverage.xml
  tags:
    - lightweight-job
  script:
    - npm test --if-present
  needs:
    - job: nodejs:build
      artifacts: true
  rules:
    - !reference [.auto-devops:rules:skip_test_disabled, rules]
    - !reference [.auto-devops:rules:skip_if_makefile, rules]
    - !reference [.auto-devops:rules:skip_if_nodejs_disabled, rules]
    - !reference [.auto-devops:rules:nodejs_present_rule, rules]

nodejs:test:e2e:
  extends:
    - .nodejs_base
    - .nodejs_image_browsers
    - .install_cache
  stage: test
  tags:
    - heavy-job
  script:
    - npm run test:e2e --if-present
  needs:
    - job: nodejs:build
      artifacts: true
  rules:
    - !reference [.auto-devops:rules:skip_test_system_disabled, rules]
    - !reference [.auto-devops:rules:skip_if_makefile, rules]
    - !reference [.auto-devops:rules:skip_if_nodejs_disabled, rules]
    - !reference [.auto-devops:rules:nodejs_present_rule, rules]
