# Common mixins and anchors
#
# Guidelines
#
# ✓ All jobs should starts with `.`
# ✓ Anchor should not be used (not preserved between files)
# ✓ Including this file should not change pipeline behavior

# Only used for anchors
# ⚠️ Must be declared before use
.auto-devops_rules:
  rules:
    - &filter_platform_target
      if: '$IF_AUTO_DEVOPS_PLATFORM_TARGET && $AUTO_DEVOPS_PLATFORM_TARGET != $IF_AUTO_DEVOPS_PLATFORM_TARGET'
      when: never
    - &skip_kubernetes
      if: '$CI_KUBERNETES_ACTIVE || $KUBECONFIG'
      when: never
    - &skip_default_branch
      if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      when: never
    - &skip_non_default_branch
      if: '$CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH'
      when: never
    - &skip_deploy_freeze
      if: '$CI_DEPLOY_FREEZE'
      when: never
    - &skip_if_staging_enabled
      if: '$STAGING_ENABLED'
      when: never
    - &skip_if_canary_enabled
      if: '$CANARY_ENABLED'
      when: never
    - &skip_if_incremental_rollout_enabled
      if: '$INCREMENTAL_ROLLOUT_ENABLED || $INCREMENTAL_ROLLOUT_MODE'
      when: never



# Docker in Docker mixin
#
# @example
# my_step:
#   extends
#     - .docker_dind
#   stage: ...
#
.docker_dind:
  services:
    - name: docker:20.10.16-dind-alpine3.15
      command:
        [--registry-mirror, 'https://docker.mirror.captive.fr', --tls=false]
  tags:
    - docker-dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CONTAINER_REGISTRY
    - export TEST_IMAGE=$REGISTRY_PROJECT_URL/$BUILD_SUBPATH:${BUILD_ID}-test

# Use controle-qualite image and a lightweight machine
# By default use `prepare` step to fail early and fast
#
# @example
# my_step:
#   extends
#     - .code_quality
#   stage: ...
#
.code_quality:
  image: registry.git.captive.fr/captive/systeme/docker/controle-qualite:latest
  stage: prepare
  tags:
    - lightweight-job

# Enable fast compression zip
#
# @example
# my_step:
#   extends
#     - .gitlab_fast_zip
#   ...
#
.gitlab_fast_zip:
  variables:
    FF_USE_FASTZIP: "true"
    # These can be specified per job or per pipeline
    ARTIFACT_COMPRESSION_LEVEL: "fast"
    CACHE_COMPRESSION_LEVEL: "fast"

# Mixin to trigger at staging step only when `$REVIEW_ENABLED` is truthy
#
# @example
#
# variables:
#   REVIEW_ENABLED: 'true'
#
# my_step:
#   extends
#     - .auto-devops_review
#   variables:
#     IF_AUTO_DEVOPS_PLATFORM_TARGET: 'AZURE' # Ex: will trigger only if AUTO_DEVOPS_PLATFORM_TARGET == 'AZURE'
#   script:
#     # TODO !
#
.auto-devops_review:
  stage: review
  when: manual
  variables:
    # Optional: define if needed to filter
    IF_AUTO_DEVOPS_PLATFORM_TARGET: null
  rules:
    - <<: *filter_platform_target
    - <<: *skip_kubernetes
    - <<: *skip_default_branch
    # Only if $REVIEW_ENABLED and on a tag or branch
    - if: '$REVIEW_ENABLED && ($CI_COMMIT_TAG || $CI_COMMIT_BRANCH)'

# Mixin to trigger at staging step only when `$STAGING_ENABLED` is truthy
#
# @example
#
# variables:
#   STAGING_ENABLED: 'true'
#
# my_step:
#   extends
#     - .auto-devops_staging
#   variables:
#     IF_AUTO_DEVOPS_PLATFORM_TARGET: 'AZURE' # Ex: will trigger only if AUTO_DEVOPS_PLATFORM_TARGET == 'AZURE'
#   script:
#     # TODO !
#
.auto-devops_staging:
  stage: staging
  variables:
    # Optional: define if needed to filter
    IF_AUTO_DEVOPS_PLATFORM_TARGET: null
  rules:
    - <<: *filter_platform_target
    - <<: *skip_kubernetes
    - <<: *skip_non_default_branch
    # Only if $STAGING_ENABLED and on a tag or branch
    - if: '$STAGING_ENABLED'

.auto-devops_production_auto:
  stage: production
  variables:
    # Optional: define if needed to filter
    IF_AUTO_DEVOPS_PLATFORM_TARGET: null
  rules:
    - <<: *skip_deploy_freeze
    - <<: *filter_platform_target
    - <<: *skip_kubernetes
    - <<: *skip_non_default_branch
    - <<: *skip_if_staging_enabled
    - <<: *skip_if_canary_enabled
    - <<: *skip_if_incremental_rollout_enabled
    # Default
    - when: always

.auto-devops_production_manual:
  stage: production
  variables:
    # Optional: define if needed to filter
    IF_AUTO_DEVOPS_PLATFORM_TARGET: null
  rules:
    - <<: *skip_deploy_freeze
    - <<: *filter_platform_target
    - <<: *skip_kubernetes
    - <<: *skip_non_default_branch
    - <<: *skip_if_incremental_rollout_enabled
    - if: '$STAGING_ENABLED || $CANARY_ENABLED'
      when: manual
